/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/~__root'
import { Route as SettingsImport } from './routes/~settings'
import { Route as RepositoriesImport } from './routes/~repositories'
import { Route as IndexImport } from './routes/~index'
import { Route as RepositoriesRepositoryIdCodeownersImport } from './routes/~repositories/~$repositoryId/~codeowners'

// Create/Update Routes

const SettingsRoute = SettingsImport.update({
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const RepositoriesRoute = RepositoriesImport.update({
  path: '/repositories',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const RepositoriesRepositoryIdCodeownersRoute =
  RepositoriesRepositoryIdCodeownersImport.update({
    path: '/$repositoryId/codeowners',
    getParentRoute: () => RepositoriesRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/repositories': {
      id: '/repositories'
      path: '/repositories'
      fullPath: '/repositories'
      preLoaderRoute: typeof RepositoriesImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsImport
      parentRoute: typeof rootRoute
    }
    '/repositories/$repositoryId/codeowners': {
      id: '/repositories/$repositoryId/codeowners'
      path: '/$repositoryId/codeowners'
      fullPath: '/repositories/$repositoryId/codeowners'
      preLoaderRoute: typeof RepositoriesRepositoryIdCodeownersImport
      parentRoute: typeof RepositoriesImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  RepositoriesRoute: RepositoriesRoute.addChildren({
    RepositoriesRepositoryIdCodeownersRoute,
  }),
  SettingsRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "~__root.tsx",
      "children": [
        "/",
        "/repositories",
        "/settings"
      ]
    },
    "/": {
      "filePath": "~index.tsx"
    },
    "/repositories": {
      "filePath": "~repositories.tsx",
      "children": [
        "/repositories/$repositoryId/codeowners"
      ]
    },
    "/settings": {
      "filePath": "~settings.tsx"
    },
    "/repositories/$repositoryId/codeowners": {
      "filePath": "~repositories/~$repositoryId/~codeowners.tsx",
      "parent": "/repositories"
    }
  }
}
ROUTE_MANIFEST_END */
